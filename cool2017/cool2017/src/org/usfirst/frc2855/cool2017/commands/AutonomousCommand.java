// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2855.cool2017.commands;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import java.nio.ByteBuffer;

import javax.print.DocFlavor.STRING;

import org.usfirst.frc2855.cool2017.Robot;
import org.usfirst.frc2855.cool2017.RobotMap;

/**
 *
 */
public class AutonomousCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private final I2C arduino = RobotMap.pixyarduino;
	boolean pixyconnected = RobotMap.pixyarduino.addressOnly();
	public static ByteBuffer buffer;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    //public double range;
    // Called just before this Command runs the first time
    protected void initialize() {
    	buffer = ByteBuffer.allocateDirect(256);
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.drive.drivezRobot(0, -0.75, 0);
    	if (pixyconnected) {
			int count = 30;
			arduino.read(8, count, buffer);
			int i;
			char j;
			String m = "";
			for (i = 0; i < count; i++) {
				j = buffer.getChar(i);
				String k = Character.toString(j);
				m = m + k;
			}
			DriverStation.reportWarning(m, true);
			
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished(double range) {
    	
		return false;
        //range = 6;
		//return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drive.drivezRobot(0, 0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
	@Override
	protected boolean isFinished() {
		// TODO Auto-generated method stub
		return false;
	}
}
